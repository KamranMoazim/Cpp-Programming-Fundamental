Programming Fundamentals
Assignment # 2:  LOOPS
NOTE: 
•	Keep input validation in mind. Don’t allow input less than 0 and less than or greater than required limit to be the input.
•	Don’t use built-in functions unless specified in the task
•	Don’t cheat from internet and don’t share code with your fellows
•	Try to solve the task by yourself without trying to copy from internet.
•	Enjoy 

Task 1: 
Write a program inputs a number ‘N’ from user and then calculates the sum first ‘N’ terms of the following series.
Series: 1, 2, 4, 7, 11, 16, 22 …..
Sample Run:
Enter a Number: 5
Sum is: 25

Task 2:
Strong numbers are the numbers whose sum of factorial of digits is equal to the original number. 
Example: 145 is a strong number because 1! + 4! + 5! = 145. Your task is to write a program that checks whether a given number is a strong number or not.

Task 3:
Take input ‘N’ from the user, and display the pattern shown in example.
Example: 
Input a number: 	Input a number:
4	15
A G L P
A G L
A G
A	
A G L P S U V B G K N P Q W B
A G L P S U V B G K N P Q W
A G L P S U V B G K N P Q
A G L P S U V B G K N P
A G L P S U V B G K N
A G L P S U V B G K
A G L P S U V B
A G L P S U V
A G L P S U
A G L P S
A G L P
A G L
A G
A

Hint: Max gap between characters is of 5. e.g. A-5-G-4-L…..

Task 4:
Write a program which takes input of a number, and then display the equivalent binary number of it. 
For Example: If entered number is 11 then the answer will be 1101.
Also check if the number is sparse, if it is not then show the next sparse number.
Note: A  number  is  Sparse  if  there  are  no  two  adjacent  1's  in  its  binary  representation.  
For  example  5(binary representation 101) is sparse, but 6 (binary representation 110) is not sparse.

Task 5: 
Take integer input from user and check whether the input is palindrome or not.
A Palindrome number is a number whose reverse is same as original number.
Sample Run: 
Enter a Number: 123478
Number is not Palindrome.
Enter a Number: 78687
Number is Palindrome.

Task 6:
Take number of rows from the user and print pattern triangle as shown:
Sample:
Input number of  rows: 5
Output: 
     

Task 7: 
Write a program to find power of a number. Take base and exponent as input.
Sample:
Input the base: 2
Input the exponent: 5
Result: 32

Task 8:
Write a program to produce a square matrix with 0's down the main diagonal, 1's in the entries just above and below the main diagonal, 2's above and below that, etc.

Sample Output:
Input number or rows: 8                                                                                      
0  1  2  3  4  5  6  7 
1  0  1  2  3  4  5  6
2  1  0  1  2  3  4  5
3  2  1  0  1  2  3  4 
4  3  2  1  0  1  2  3 
5  4  3  2  1  0  1  2 
6  5  4  3  2  1  0  1 
7  6  5  4  3  2  1  0 

Task 9: 
Write a program to print following pattern:
1*3*5*7*9
1*3*5*7
1*3*5
1*3
1

Task 10:
Write code to create a checkerboard pattern with the words "black" and "white".
Sample Output:
Input number of rows: 5
black-white-black-white-black
white-black-white-black-white
black-white-black-white-black
white-black-white-black-white
black-white-black-white-black

BONUS TASK:

Task 11:
Print your name . Use setw(); or any required function to produce your output.
Sample: 
Muhammad
                   Nadeem
                                Majeed  























#include <iostream>

using namespace std;

int main()
{
    char alphaDigit = 65;   // A=65  Z=90
    int number, colManager, incrementar = 6;

    cout << "Enter Number : ";
    cin >> number;
    colManager = number;

    if (number > 0)
    {
        for (int i = 0; i < number; i++)
        {
            for (int j = 0; j < colManager; j++)
            {
                if (alphaDigit >= 65 && alphaDigit <= 90)
                {
                    cout << alphaDigit << "\t";
                    alphaDigit += incrementar--;
                    //incrementar--;
                    if (incrementar==0)
                    {
                        incrementar = 6;
                        alphaDigit += incrementar--;
                        //incrementar--;
                    }
                }
                else
                {
                    alphaDigit -= 26;
                }
                
            }
            colManager -= 1;
            alphaDigit = 65;
            incrementar = 6;
            cout << "\n";
        }
    }
    else
    {
        cout << "Negative or zero is not Allowed.";
    }

    return 0;
}
























#include <iostream>

using namespace std;

int main()
{
    int number, binary, binaryChecker = 1;
    bool yesSparseOne = false, yesSparseTwo = false;

    cout << "Enter Number : ";
    cin >> number;

    if (number > 0)
    {
        cout << "Binary of your Entered Number is : ";
        while (number != 0)
        {
            binary = number % 2;
            number /= 2;
            cout << binary;

            if (binary == binaryChecker && yesSparseOne)
            {
                yesSparseTwo = true;
            }
            else
            {
                yesSparseTwo = false;
                yesSparseOne = false;
            }

            if (binary == binaryChecker)
            {
                yesSparseOne = true;
            }

            if (yesSparseOne && yesSparseTwo)
            {
                binaryChecker = 0;
            }
        }
        if (!binaryChecker)
        {
            cout << "\nNumber is NOT Sparse";
            while (yesSparseOne && yesSparseTwo)
            {
                binaryChecker = 1, yesSparseOne = false, yesSparseTwo = false;
                while (number != 0)
                {
                    binary = number % 2;
                    number /= 2;
                    cout << binary;

                    if (binary == binaryChecker && yesSparseOne)
                    {
                        yesSparseTwo = true;
                    }
                    else
                    {
                        yesSparseTwo = false;
                        yesSparseOne = false;
                    }

                    if (binary == binaryChecker)
                    {
                        yesSparseOne = true;
                    }

                    if (yesSparseOne && yesSparseTwo)
                    {
                        binaryChecker = 0;
                    }
                }
            }
            
        }
        else
        {
            cout << "\nNumber is Sparse";
        }
    }
    else
    {
        cout << "Negative or zero is not Allowed.";
    }

    return 0;
}











          128    64    32    16    8    4    2    1 
11         0     0     0     0     1    0    1    1     NO  
12         0     0     0     0     1    1    0    0     NO  
13         0     0     0     0     1    1    0    1     NO  
14         0     0     0     0     1    1    1    0     NO   
15         0     0     0     0     1    1    1    1     NO   
16         0     0     0     1     0    0    0    0     YES   






