#include <iostream>

using namespace std;

const int SIZE = 5;

void inputArray(char[], int);
void displayArray(char[]);
void unionArrays(char[], char[]);
void intersectionArrays(char[], char[]);

int main()
{
    char array1[SIZE] = {};
    char array2[SIZE] = {};

    inputArray(array1, SIZE);
    cout << endl;
    inputArray(array2, SIZE);

    intersectionArrays(array1, array2);
    unionArrays(array1, array2);

    return 0;
}


void inputArray(char array[], int size) {

    for (int i = 0; i < size; i++)
    {
        cout << "Enter Character : ";
        cin >> array[i];
    }
}

void displayArray(char array[]) {

    cout << endl;
    for (int i = 0; i < (SIZE + SIZE); i++) {

        if (array[i] != '\0')
        {
            cout << array[i] << endl;
        }
    }

}

void unionArrays(char array1[], char array2[]) {

    char working[SIZE + SIZE] = {};
    char temp;

    int k = 0, otherIndex = 0, particularChar = 0;
    bool found = false;


    for (int i = 0; i < SIZE; i++)
    {
        working[i] = array1[i];
    }

    k = SIZE;
    for (int i = 0; i < SIZE; i++)
    {
        for (int j = 0; j < SIZE; j++)
        {
            if (array1[j] == array2[i])
            {
                found = false;
                break;
            }
            else
            {
                found = true;
            }
        }

        if (found)
        {
            working[k] = array2[i];
            found = false;
            k++;
        }
    }

    // for sorting
    // capital
    for (int i = 0; i < SIZE + SIZE; i++) {
        for (int j = 0; j < SIZE + SIZE; j++) {
            if (int(working[i]) >= 65 && int(working[i]) <= 90) {
                temp = working[i];
                working[i] = working[j];
                working[j] = temp;
            }
        }
    }
    for (int i = 0; i < SIZE + SIZE; i++)
    {
        if (int(working[i]) >= 65 && int(working[i]) <= 90)
        {
            particularChar++;
        }
    }
    // small
    for (int i = particularChar; i < SIZE + SIZE; i++) {
        for (int j = particularChar; j < SIZE + SIZE; j++) {
            if (int(working[i]) >= 97 && int(working[i]) <= 122) {
                temp = working[i];
                working[i] = working[j];
                working[j] = temp;
            }
        }
    }
    for (int i = 0; i < SIZE + SIZE; i++)
    {
        if (int(working[i]) >= 97 && int(working[i]) <= 122)
        {
            particularChar++;
        }
    }
    // numbers
    for (int i = particularChar; i < SIZE + SIZE; i++) {
        for (int j = particularChar; j < SIZE + SIZE; j++) {
            if (int(working[i]) >= 48 && int(working[i]) <= 57) {
                temp = working[i];
                working[i] = working[j];
                working[j] = temp;
            }
        }
    }

    displayArray(working);
}


void intersectionArrays(char array1[], char array2[]) {
    char working[SIZE + SIZE] = {};
    char temp;

    int k = 0, particularChar = 0;

    for (int i = 0; i < SIZE; i++)
    {
        for (int j = 0; j < SIZE; j++)
        {
            if (array1[i] == array2[j])
            {
                working[k] = array1[i];
                k++;
            }
        }
    }

    // for sorting
    // capital
    for (int i = 0; i < SIZE + SIZE; i++) {
        for (int j = 0; j < SIZE + SIZE; j++) {
            if (int(working[i]) >= 65 && int(working[i]) <= 90) {
                temp = working[i];
                working[i] = working[j];
                working[j] = temp;
            }
        }
    }
    for (int i = 0; i < SIZE + SIZE; i++)
    {
        if (int(working[i]) >= 65 && int(working[i]) <= 90)
        {
            particularChar++;
        }
    }
    // small
    for (int i = particularChar; i < SIZE + SIZE; i++) {
        for (int j = particularChar; j < SIZE + SIZE; j++) {
            if (int(working[i]) >= 97 && int(working[i]) <= 122) {
                temp = working[i];
                working[i] = working[j];
                working[j] = temp;
            }
        }
    }
    for (int i = 0; i < SIZE + SIZE; i++)
    {
        if (int(working[i]) >= 97 && int(working[i]) <= 122)
        {
            particularChar++;
        }
    }
    // numbers
    for (int i = particularChar; i < SIZE + SIZE; i++) {
        for (int j = particularChar; j < SIZE + SIZE; j++) {
            if (int(working[i]) >= 48 && int(working[i]) <= 57) {
                temp = working[i];
                working[i] = working[j];
                working[j] = temp;
            }
        }
    }

    displayArray(working);
}


